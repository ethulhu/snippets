JavaScript:
        Array:
                - |
                        Array.prototype.last = function() {
                                return this[ this.length - 1 ];
                        }
                - |
                        Array.prototype.sum = function() {
                                return this.reduce( ( acc, i ) => acc + i, 0 );
                        }
        LocalStorage:
                - |
                        Storage.prototype.putValue = function( k, v ) {
                                this.setItem( k, JSON.stringify( v ) );
                        }
                - |
                        Storage.prototype.getValue = function( k ) {
                                return JSON.parse( this.getItem( k ) || 'null' );
                        };
        String:
                - |
                        String.prototype.toTitleCase = function() {
                                return this.split( ' ' )
                                           .map( word => `${word.charAt( 0 ).toUpperCase()}${word.slice( 1 )}` )
                                           .join( ' ' );
                        }

CSS:
        Night Mode: |
                @media (prefers-color-scheme: dark) {
                        body {
                                background: #1f1f1f;
                                color: #ddd;
                        }
                }

Python:
        Argument Parsing: |
                parser = argparse.ArgumentParser(description=__doc__)
                parser.add_argument('--db', type=argparse.FileType('r'),
                                required=True, help='path to db.yaml')
                parser.add_argument('--output', type=argparse.FileType('w'),
                                required=True, help='path to output HTML')
                args = parser.parse_args()
        Jinja2: |
                environment = jinja2.Environment()
                environment.filters['strip'] = lambda s: s.strip()
                print(environment.from_string(TEMPLATE).render(
                snippets=snippets), file=args.output)
