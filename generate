#!/usr/bin/env python3
"""generate an HTML file from a YAML Snippets DB."""

import argparse

import yaml
import jinja2

from typing import Any, Dict, List, Union


TEMPLATE = '''
<!DOCTYPE html>
<html lang='en'>
<head>
    <meta charset='utf-8'>
    <title>snippets</title>
    <style>
        @media (prefers-color-scheme: dark) {
            body {
                background: #1f1f1f;
                color: #ddd;
            }
        }
    </style>
</head>
<body>
    <main>
        {%- macro section(depth, name, snippets) -%}
            <section>
            <h{{ depth }}>{{ name }}</h{{ depth}}>
            {%- if snippets is string -%}
                <pre>{{ snippets | strip }}</pre>
            {%- elif snippets is mapping -%}
                {%- for k, v in snippets.items() -%}
                    {{ section(depth + 1, k, v) }}
                {%- endfor %}
            {%- else -%}
                {%- for snippet in snippets -%}
                    <pre>{{ snippet | strip }}</pre>
                {%- endfor -%}
            {%- endif -%}
            </section>
        {%- endmacro -%}
        {{ section(1, 'Snippets', snippets) }}
    </main>
    <script type='module'>
    </script>
</body>
</html>
'''.strip()

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument('--db', type=argparse.FileType('r'),
                        required=True, help='path to db.yaml')
    parser.add_argument('--output', type=argparse.FileType('w'),
                        required=True, help='path to output HTML')
    args = parser.parse_args()

    bytes = args.db.read()

    snippets = yaml.safe_load(bytes)

    environment = jinja2.Environment()
    environment.filters['strip'] = lambda s: s.strip()

    print(environment.from_string(TEMPLATE).render(
        snippets=snippets), file=args.output)
